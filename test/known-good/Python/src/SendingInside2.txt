<span class="source-lf meta-targetspec-lflang keyword-control-lflang">target</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">Python</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Printer</span><span class="source-lf"> {</span>
<span class="source-lf">  </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf"> x</span>
<span class="source-lf"></span>
<span class="source-lf">  </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(x) </span><span class="source-lf meta-embedded-block-py">{=</span>
<span class="source-lf meta-embedded-block-py">    print("Inside reactor received: ", x.value)</span>
<span class="source-lf meta-embedded-block-py">    if x.value != 1:</span>
<span class="source-lf meta-embedded-block-py">        sys.stderr.write("ERROR: Expected 1.\n")</span>
<span class="source-lf meta-embedded-block-py">        exit(1)</span>
<span class="source-lf meta-embedded-block-py">  </span><span class="source-lf meta-embedded-block-py">=}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">main</span><span class="source-lf"> </span><span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">SendingInside2</span><span class="source-lf"> {</span>
<span class="source-lf">  </span><span class="source-lf storage-modifier-lflang">timer</span><span class="source-lf"> t</span>
<span class="source-lf">  </span><span class="source-lf variable-other-constant-reactorinstance-lflang">p</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Printer</span><span class="source-lf">()</span>
<span class="source-lf"></span>
<span class="source-lf">  </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(t) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">p</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">x</span><span class="source-lf"> </span><span class="source-lf meta-embedded-block-py">{=</span><span class="source-lf meta-embedded-block-py"> p.x.set(1) </span><span class="source-lf meta-embedded-block-py">=}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
