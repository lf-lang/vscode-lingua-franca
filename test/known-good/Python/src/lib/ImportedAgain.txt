<span class="source-lf comment-line-double-dash-lflang"># This is used by the test for the ability to import a reactor definition that itself imports a</span>
<span class="source-lf comment-line-double-dash-lflang"># reactor definition.</span>
<span class="source-lf meta-targetspec-lflang keyword-control-lflang">target</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">Python</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">ImportedAgain</span><span class="source-lf"> {  </span><span class="source-lf comment-line-double-dash-lflang"># import Imported from "Imported.lf"</span>
<span class="source-lf">  </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf"> x  </span><span class="source-lf comment-line-double-dash-lflang"># y = new Imported(); // FIXME: Address this bug</span>
<span class="source-lf"></span>
<span class="source-lf">  </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(x) </span><span class="source-lf meta-embedded-block-py">{=</span>
<span class="source-lf meta-embedded-block-py">    print("Received: " + str(x.value))</span>
<span class="source-lf meta-embedded-block-py">    if (x.value != 42):</span>
<span class="source-lf meta-embedded-block-py">        print("ERROR: Expected input to be 42. Got: " + x.value)</span>
<span class="source-lf meta-embedded-block-py">        exit(1)</span>
<span class="source-lf meta-embedded-block-py">  </span><span class="source-lf meta-embedded-block-py">=}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
