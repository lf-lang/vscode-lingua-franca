<span class="source-lf comment-block-lflang">/**</span><span class="source-lf comment-block-lflang"> Modal Reactor Test. Tests cycling through modes with banks of reactors. </span><span class="source-lf comment-block-lflang">*/</span>
<span class="source-lf meta-targetspec-lflang keyword-control-lflang">target</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">Python</span><span class="source-lf meta-targetspec-lflang"> {</span>
<span class="source-lf meta-targetspec-lflang variable-parameter-lflang">    fast</span><span class="source-lf meta-targetspec-lflang">: </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">false</span><span class="source-lf meta-targetspec-lflang">,</span>
<span class="source-lf meta-targetspec-lflang variable-parameter-lflang">    timeout</span><span class="source-lf meta-targetspec-lflang">: </span><span class="source-lf meta-targetspec-lflang constant-numeric-int-lflang">2</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-numeric-lflang">sec</span>
<span class="source-lf meta-targetspec-lflang">}</span>
<span class="source-lf"></span>
<span class="source-lf keyword-control-import-lflang">import</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">TraceTesting</span><span class="source-lf"> </span><span class="source-lf keyword-control-import-lflang">from</span><span class="source-lf"> </span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">util/TraceTesting.lf</span><span class="source-lf string-quoted-double-lflang">"</span>
<span class="source-lf keyword-control-import-lflang">import</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">CounterCycle</span><span class="source-lf"> </span><span class="source-lf keyword-control-import-lflang">from</span><span class="source-lf"> </span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Count3Modes.lf</span><span class="source-lf string-quoted-double-lflang">"</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">main</span><span class="source-lf"> </span><span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">timer</span><span class="source-lf"> stepper(</span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">, </span><span class="source-lf constant-numeric-int-lflang">250</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">msec</span><span class="source-lf">)</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">counters</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf">[</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">] CounterCycle()</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">test</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">TraceTesting</span><span class="source-lf">(events_size </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">, trace </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> (  </span><span class="source-lf comment-line-double-dash-lflang">// keep-format</span>
<span class="source-lf">        </span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span>
<span class="source-lf">        </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span>
<span class="source-lf">        </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span>
<span class="source-lf">        </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span>
<span class="source-lf">        </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span>
<span class="source-lf">        </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span>
<span class="source-lf">        </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span>
<span class="source-lf">        </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span>
<span class="source-lf">        </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span>
<span class="source-lf">    ), training </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-language-lflang">False</span><span class="source-lf">)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">counters</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">count</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">test</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">events</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(stepper) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">counters</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">next</span><span class="source-lf"> </span><span class="source-lf meta-embedded-block-py">{=</span><span class="source-lf meta-embedded-block-py">  # Trigger</span>
<span class="source-lf meta-embedded-block-py">        for counter in counters:</span>
<span class="source-lf meta-embedded-block-py">            counter.next.set(True)</span>
<span class="source-lf meta-embedded-block-py">    </span><span class="source-lf meta-embedded-block-py">=}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
