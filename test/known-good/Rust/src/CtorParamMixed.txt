<span class="source-lf meta-targetspec-lflang keyword-control-lflang">target</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">Rust</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Print</span><span class="source-lf">(</span>
<span class="source-lf">    value:</span><span class="source-lf storage-type-lflang"> i32</span><span class="source-lf">(</span><span class="source-lf constant-numeric-int-lflang">42</span><span class="source-lf">),</span>
<span class="source-lf">    name:</span><span class="source-lf entity-name-type-lflang"> String</span><span class="source-lf">({</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">xxx</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">into() </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}),</span>
<span class="source-lf">    other:</span><span class="source-lf storage-type-lflang"> bool</span><span class="source-lf">(</span><span class="source-lf constant-language-lflang">false</span><span class="source-lf">)</span>
<span class="source-lf">) {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf"> value(value)</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf"> name(name)</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf"> other(other)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(</span><span class="source-lf support-variable-lflang">startup</span><span class="source-lf">) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">        assert_eq!(</span><span class="source-lf constant-numeric-int-lflang">42</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">self</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">value</span><span class="source-lf">);</span>
<span class="source-lf">        assert_eq!(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">x2hr</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">self</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-constant-reactorinstance-lflang">name</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">as_str</span><span class="source-lf">());</span>
<span class="source-lf">        assert_eq!(</span><span class="source-lf constant-language-lflang">true</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">self</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">other</span><span class="source-lf">);</span>
<span class="source-lf">        println!(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">success</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">);</span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">main</span><span class="source-lf"> </span><span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">CtorParamMixed</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">p</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Print</span><span class="source-lf">(other </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-language-lflang">true</span><span class="source-lf">, name </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">x2hr</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">into() </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">})</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
