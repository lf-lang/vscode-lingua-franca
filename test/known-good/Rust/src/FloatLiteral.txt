<span class="source-lf meta-targetspec-lflang keyword-control-lflang">target</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">Rust</span>
<span class="source-lf"></span>
<span class="source-lf comment-line-double-dash-lflang">// This test verifies that floating-point literals are handled correctly.</span>
<span class="source-lf storage-modifier-lflang">main</span><span class="source-lf"> </span><span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf"> N:</span><span class="source-lf storage-type-lflang"> f64</span><span class="source-lf">(</span><span class="source-lf constant-numeric-float-lflang">6.0221409e+23</span><span class="source-lf">)</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf"> charge:</span><span class="source-lf storage-type-lflang"> f64</span><span class="source-lf">(</span><span class="source-lf keyword-operator-lflang">-</span><span class="source-lf constant-numeric-float-lflang">1.6021766E-19</span><span class="source-lf">)</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf"> minus_epsilon:</span><span class="source-lf storage-type-lflang"> f64</span><span class="source-lf">(</span><span class="source-lf keyword-operator-lflang">-</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">01e0)</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf"> expected:</span><span class="source-lf storage-type-lflang"> f64</span><span class="source-lf">(</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">964853323188E5)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(</span><span class="source-lf support-variable-lflang">startup</span><span class="source-lf">) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">        let F </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-</span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">self</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">N</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">*</span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">self</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">charge</span><span class="source-lf">;</span>
<span class="source-lf">        println!(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">The Faraday constant is roughly {}.</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">, F);</span>
<span class="source-lf">        assert!((F </span><span class="source-lf keyword-operator-lflang">-</span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">self</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">expected</span><span class="source-lf">)</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">abs() < (</span><span class="source-lf variable-other-constant-reactorinstance-lflang">self</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">minus_epsilon</span><span class="source-lf">)</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">abs());</span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
