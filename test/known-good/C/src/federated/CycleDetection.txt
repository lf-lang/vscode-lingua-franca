<span class="source-lf comment-block-lflang">/**</span>
<span class="source-lf comment-block-lflang"> * Check whether the internally generated network and control reactions</span>
<span class="source-lf comment-block-lflang"> * introduce a cycle or not. The failure for this test is not being compiled.</span>
<span class="source-lf comment-block-lflang"> * @author Edward A. Lee</span>
<span class="source-lf comment-block-lflang"> </span><span class="source-lf comment-block-lflang">*/</span>
<span class="source-lf meta-targetspec-lflang keyword-control-lflang">target</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">C</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">CAReplica</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> local_update:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> remote_update:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> query:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf meta-embedded-block-cpp"> balance:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span><span class="source-lf meta-embedded-block-cpp">(</span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">output</span><span class="source-lf meta-embedded-block-cpp"> response:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(local_update, remote_update) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">        if (local_update</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">is_present) {</span>
<span class="source-lf">            self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">balance </span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> local_update</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">value;</span>
<span class="source-lf">        }</span>
<span class="source-lf">        if (remote_update</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">is_present) {</span>
<span class="source-lf">            self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">balance </span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> remote_update</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">value;</span>
<span class="source-lf">        }</span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(query) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> response {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set(response, self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">balance); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">UserInput</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> balance:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">output</span><span class="source-lf meta-embedded-block-cpp"> deposit:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(</span><span class="source-lf support-variable-lflang">startup</span><span class="source-lf">) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> deposit {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set(deposit, </span><span class="source-lf constant-numeric-int-lflang">100</span><span class="source-lf">); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(balance) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">        if (balance</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">value !</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">200</span><span class="source-lf">) {</span>
<span class="source-lf">            lf_print_error_and_exit(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Did not receive the expected balance. Expected: 200. Got: %d.</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">, balance</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">value);</span>
<span class="source-lf">        }</span>
<span class="source-lf">        lf_print(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Balance: %d</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">, balance</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">value);</span>
<span class="source-lf">        lf_request_stop();</span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(</span><span class="source-lf support-variable-lflang">shutdown</span><span class="source-lf">) {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_print(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Test passed!</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">federated</span><span class="source-lf"> </span><span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">u1</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">UserInput</span><span class="source-lf">()</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">r1</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">CAReplica</span><span class="source-lf">()</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">u2</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">UserInput</span><span class="source-lf">()</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">r2</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">CAReplica</span><span class="source-lf">()</span>
<span class="source-lf">    (</span><span class="source-lf variable-other-constant-reactorinstance-lflang">u1</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">deposit</span><span class="source-lf">)</span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">r1</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">query</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">r1</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">local_update</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">r1</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">response</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">u1</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">balance</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">u1</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">deposit</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">r2</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">remote_update</span>
<span class="source-lf"></span>
<span class="source-lf">    (</span><span class="source-lf variable-other-constant-reactorinstance-lflang">u2</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">deposit</span><span class="source-lf">)</span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">r2</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">query</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">r2</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">local_update</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">r2</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">response</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">u2</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">balance</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">u2</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">deposit</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">r1</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">remote_update</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
