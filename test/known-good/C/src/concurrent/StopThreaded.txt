<span class="source-lf comment-block-lflang">/**</span>
<span class="source-lf comment-block-lflang"> * A test for the lf_request_stop() functionality in Lingua Franca. This version</span>
<span class="source-lf comment-block-lflang"> * of the test is threaded.</span>
<span class="source-lf comment-block-lflang"> *</span>
<span class="source-lf comment-block-lflang"> * @author Soroush Bateni</span>
<span class="source-lf comment-block-lflang"> </span><span class="source-lf comment-block-lflang">*/</span>
<span class="source-lf meta-targetspec-lflang keyword-control-lflang">target</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">C</span><span class="source-lf meta-targetspec-lflang"> {</span>
<span class="source-lf meta-targetspec-lflang variable-parameter-lflang">    timeout</span><span class="source-lf meta-targetspec-lflang">: </span><span class="source-lf meta-targetspec-lflang constant-numeric-int-lflang">11</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-numeric-lflang">msec</span><span class="source-lf meta-targetspec-lflang">,</span>
<span class="source-lf meta-targetspec-lflang variable-parameter-lflang">    build-type</span><span class="source-lf meta-targetspec-lflang">: RelWithDebInfo  </span><span class="source-lf meta-targetspec-lflang comment-line-double-dash-lflang">// logging: DEBUG</span>
<span class="source-lf meta-targetspec-lflang">}</span>
<span class="source-lf"></span>
<span class="source-lf keyword-control-import-lflang">import</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Sender</span><span class="source-lf"> </span><span class="source-lf keyword-control-import-lflang">from</span><span class="source-lf"> </span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">../lib/LoopedActionSender.lf</span><span class="source-lf string-quoted-double-lflang">"</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Consumer</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> in:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf meta-embedded-block-cpp"> reaction_invoked_correctly:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> bool</span><span class="source-lf meta-embedded-block-cpp">(</span><span class="source-lf constant-language-lflang">false</span><span class="source-lf">)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(in) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">        tag_t current_tag </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_tag();</span>
<span class="source-lf">        if (lf_tag_compare(current_tag,</span>
<span class="source-lf">                         (tag_t) { </span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf storage-type-lflang">time</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> MSEC(</span><span class="source-lf constant-numeric-int-lflang">10</span><span class="source-lf">) </span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf"> lf_time_start(), </span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">microstep </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">9</span><span class="source-lf">}) > </span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">) {</span>
<span class="source-lf comment-line-double-dash-lflang">            </span><span class="source-lf comment-line-double-dash-lflang">// The reaction should not have been called at tags larger than (10</span>
<span class="source-lf comment-line-double-dash-lflang">            </span><span class="source-lf comment-line-double-dash-lflang">// msec, 9)</span>
<span class="source-lf">            char </span><span class="source-lf storage-type-lflang">time</span><span class="source-lf">[</span><span class="source-lf constant-numeric-int-lflang">255</span><span class="source-lf">];</span>
<span class="source-lf">            lf_print_error_and_exit(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Invoked reaction(in) at tag (%llu, %d) which is bigger than shutdown.</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">,</span>
<span class="source-lf">                </span><span class="source-lf variable-other-constant-reactorinstance-lflang">current_tag</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf storage-type-lflang">time</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-</span><span class="source-lf"> lf_time_start(), </span><span class="source-lf variable-other-constant-reactorinstance-lflang">current_tag</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">microstep</span><span class="source-lf">);</span>
<span class="source-lf">        } else if (lf_tag_compare(current_tag,</span>
<span class="source-lf">                         (tag_t) { </span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf storage-type-lflang">time</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> MSEC(</span><span class="source-lf constant-numeric-int-lflang">10</span><span class="source-lf">) </span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf"> lf_time_start(), </span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">microstep </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">8</span><span class="source-lf">}) </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">) {</span>
<span class="source-lf comment-line-double-dash-lflang">            </span><span class="source-lf comment-line-double-dash-lflang">// Call lf_request_stop() at relative tag (10 msec, 8)</span>
<span class="source-lf">            lf_print(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Requesting stop.</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">);</span>
<span class="source-lf">            lf_request_stop();</span>
<span class="source-lf">        } else if (lf_tag_compare(current_tag,</span>
<span class="source-lf">                         (tag_t) { </span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf storage-type-lflang">time</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> MSEC(</span><span class="source-lf constant-numeric-int-lflang">10</span><span class="source-lf">) </span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf"> lf_time_start(), </span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">microstep </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">9</span><span class="source-lf">}) </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">) {</span>
<span class="source-lf comment-line-double-dash-lflang">            </span><span class="source-lf comment-line-double-dash-lflang">// Check that this reaction is indeed also triggered at (10 msec, 9)</span>
<span class="source-lf comment-line-double-dash-lflang">            </span><span class="source-lf comment-line-double-dash-lflang">// printf("Reaction invoked.\n");</span>
<span class="source-lf">            self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">reaction_invoked_correctly </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-language-lflang">true</span><span class="source-lf">;</span>
<span class="source-lf">        }</span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(</span><span class="source-lf support-variable-lflang">shutdown</span><span class="source-lf">) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">        tag_t current_tag </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_tag();</span>
<span class="source-lf">        lf_print(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Shutdown invoked at tag (%lld, %u).</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">current_tag</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf storage-type-lflang">time</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-</span><span class="source-lf"> lf_time_start(), </span><span class="source-lf variable-other-constant-reactorinstance-lflang">current_tag</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">microstep</span><span class="source-lf">);</span>
<span class="source-lf comment-line-double-dash-lflang">        </span><span class="source-lf comment-line-double-dash-lflang">// Check to see if shutdown is called at relative tag (10 msec, 9)</span>
<span class="source-lf">        if (lf_tag_compare(current_tag,</span>
<span class="source-lf">            (tag_t) { </span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf storage-type-lflang">time</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> MSEC(</span><span class="source-lf constant-numeric-int-lflang">10</span><span class="source-lf">) </span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf"> lf_time_start(), </span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">microstep </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">9</span><span class="source-lf">}) </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf"> &&</span>
<span class="source-lf">            self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">reaction_invoked_correctly </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-language-lflang">true</span><span class="source-lf">) {</span>
<span class="source-lf">            lf_print(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">SUCCESS: successfully enforced stop.</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">);</span>
<span class="source-lf">        } else if(lf_tag_compare(current_tag,</span>
<span class="source-lf">            (tag_t) { </span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf storage-type-lflang">time</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> MSEC(</span><span class="source-lf constant-numeric-int-lflang">10</span><span class="source-lf">) </span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf"> lf_time_start(), </span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf">microstep </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">9</span><span class="source-lf">}) > </span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">) {</span>
<span class="source-lf">                lf_print_error_and_exit(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Shutdown invoked at tag (%llu, %d). Failed to enforce timeout.</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">,</span>
<span class="source-lf">                            </span><span class="source-lf variable-other-constant-reactorinstance-lflang">current_tag</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf storage-type-lflang">time</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-</span><span class="source-lf"> lf_time_start(), </span><span class="source-lf variable-other-constant-reactorinstance-lflang">current_tag</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">microstep</span><span class="source-lf">);</span>
<span class="source-lf">        } else if (self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">reaction_invoked_correctly </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-language-lflang">false</span><span class="source-lf">) {</span>
<span class="source-lf comment-line-double-dash-lflang">            </span><span class="source-lf comment-line-double-dash-lflang">// Check to see if reactions were called correctly</span>
<span class="source-lf">            lf_print_error_and_exit(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Failed to invoke reaction(in) at tag (%llu, %d).</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">,</span>
<span class="source-lf">                            </span><span class="source-lf variable-other-constant-reactorinstance-lflang">current_tag</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf storage-type-lflang">time</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-</span><span class="source-lf"> lf_time_start(), </span><span class="source-lf variable-other-constant-reactorinstance-lflang">current_tag</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">microstep</span><span class="source-lf">);</span>
<span class="source-lf">        }</span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">main</span><span class="source-lf"> </span><span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">consumer</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf">[</span><span class="source-lf constant-numeric-int-lflang">4</span><span class="source-lf">] Consumer()</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">producer</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf">[</span><span class="source-lf constant-numeric-int-lflang">4</span><span class="source-lf">] Sender(break_interval </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">msec</span><span class="source-lf">)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">producer</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">out</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">consumer</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">in</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
