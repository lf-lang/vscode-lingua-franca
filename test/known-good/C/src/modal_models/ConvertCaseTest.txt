<span class="source-lf comment-block-lflang">/**</span><span class="source-lf comment-block-lflang"> Modal Reactor Test. Tests nested reactors with modes. </span><span class="source-lf comment-block-lflang">*/</span>
<span class="source-lf meta-targetspec-lflang keyword-control-lflang">target</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">C</span><span class="source-lf meta-targetspec-lflang"> {</span>
<span class="source-lf meta-targetspec-lflang variable-parameter-lflang">    fast</span><span class="source-lf meta-targetspec-lflang">: </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">false</span><span class="source-lf meta-targetspec-lflang">,</span>
<span class="source-lf meta-targetspec-lflang variable-parameter-lflang">    timeout</span><span class="source-lf meta-targetspec-lflang">: </span><span class="source-lf meta-targetspec-lflang constant-numeric-int-lflang">4</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-numeric-lflang">sec</span><span class="source-lf meta-targetspec-lflang">  </span><span class="source-lf meta-targetspec-lflang comment-line-double-dash-lflang">// logging: debug</span>
<span class="source-lf meta-targetspec-lflang">}</span>
<span class="source-lf"></span>
<span class="source-lf keyword-control-import-lflang">import</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">TraceTesting</span><span class="source-lf"> </span><span class="source-lf keyword-control-import-lflang">from</span><span class="source-lf"> </span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">util/TraceTesting.lf</span><span class="source-lf string-quoted-double-lflang">"</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">ResetProcessor</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> discard:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> bool</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> character:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> char</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">output</span><span class="source-lf meta-embedded-block-cpp"> converted:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">initial</span><span class="source-lf"> </span><span class="source-lf keyword-control-lflang">mode</span><span class="source-lf"> Converting {</span>
<span class="source-lf">        </span><span class="source-lf variable-other-constant-reactorinstance-lflang">converter</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Converter</span><span class="source-lf">()</span>
<span class="source-lf">        character </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">converter</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">raw</span>
<span class="source-lf">        </span><span class="source-lf variable-other-constant-reactorinstance-lflang">converter</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">converted</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> converted</span>
<span class="source-lf">        </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(discard) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf keyword-control-lflang">reset</span><span class="source-lf">(Discarding) {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set_mode(Discarding); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">    }</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">mode</span><span class="source-lf"> Discarding {</span>
<span class="source-lf">        </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(character) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> converted {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set(converted, </span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf string-quoted-single-lflang">_</span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf">); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">        </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(character) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf keyword-control-lflang">reset</span><span class="source-lf">(Converting) {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set_mode(Converting); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">    }</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">HistoryProcessor</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> discard:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> bool</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> character:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> char</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">output</span><span class="source-lf meta-embedded-block-cpp"> converted:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">initial</span><span class="source-lf"> </span><span class="source-lf keyword-control-lflang">mode</span><span class="source-lf"> Converting {</span>
<span class="source-lf">        </span><span class="source-lf variable-other-constant-reactorinstance-lflang">converter</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Converter</span><span class="source-lf">()</span>
<span class="source-lf">        character </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">converter</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">raw</span>
<span class="source-lf">        </span><span class="source-lf variable-other-constant-reactorinstance-lflang">converter</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">converted</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> converted</span>
<span class="source-lf">        </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(discard) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf keyword-control-lflang">reset</span><span class="source-lf">(Discarding) {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set_mode(Discarding); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">    }</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">mode</span><span class="source-lf"> Discarding {</span>
<span class="source-lf">        </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(character) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> converted {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set(converted, </span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf string-quoted-single-lflang">_</span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf">); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">        </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(character) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> history(Converting) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">            lf_set_mode(Converting);</span>
<span class="source-lf">        </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">    }</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Converter</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> raw:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> char</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">output</span><span class="source-lf meta-embedded-block-cpp"> converted:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">preamble</span><span class="source-lf"> {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf comment-line-double-dash-lflang">        </span><span class="source-lf comment-line-double-dash-lflang">#include <stdio.h></span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">initial</span><span class="source-lf"> </span><span class="source-lf keyword-control-lflang">mode</span><span class="source-lf"> Upper {</span>
<span class="source-lf">        </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(raw) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> converted, </span><span class="source-lf keyword-control-lflang">reset</span><span class="source-lf">(Lower) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">            char c </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> raw</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">value;</span>
<span class="source-lf">            if (c ></span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf string-quoted-single-lflang">a</span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf"> && c <</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf string-quoted-single-lflang">z</span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf">) {</span>
<span class="source-lf">                lf_set(converted, c </span><span class="source-lf keyword-operator-lflang">-</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">32</span><span class="source-lf">);</span>
<span class="source-lf">            } else {</span>
<span class="source-lf">                lf_set(converted, c);</span>
<span class="source-lf">            }</span>
<span class="source-lf">            if (c </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf string-quoted-single-lflang"> </span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf">) {</span>
<span class="source-lf">                lf_set_mode(Lower);</span>
<span class="source-lf">            }</span>
<span class="source-lf">        </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">    }</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">mode</span><span class="source-lf"> Lower {</span>
<span class="source-lf">        </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(raw) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> converted, </span><span class="source-lf keyword-control-lflang">reset</span><span class="source-lf">(Upper) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">            char c </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> raw</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">value;</span>
<span class="source-lf">            if (c ></span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf string-quoted-single-lflang">A</span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf"> && c <</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf string-quoted-single-lflang">Z</span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf">) {</span>
<span class="source-lf">                lf_set(converted, c </span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">32</span><span class="source-lf">);</span>
<span class="source-lf">            } else {</span>
<span class="source-lf">                lf_set(converted, c);</span>
<span class="source-lf">            }</span>
<span class="source-lf">            if (c </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf string-quoted-single-lflang"> </span><span class="source-lf string-quoted-single-lflang">'</span><span class="source-lf">) {</span>
<span class="source-lf">                lf_set_mode(Upper);</span>
<span class="source-lf">            }</span>
<span class="source-lf">        </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">    }</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">InputFeeder</span><span class="source-lf">(message:</span><span class="source-lf storage-type-lflang"> string</span><span class="source-lf">(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">)) {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">output</span><span class="source-lf meta-embedded-block-cpp"> character:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> char</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf meta-embedded-block-cpp"> idx:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span><span class="source-lf meta-embedded-block-cpp">(</span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">timer</span><span class="source-lf"> t(</span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">, </span><span class="source-lf constant-numeric-int-lflang">250</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">msec</span><span class="source-lf">)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">preamble</span><span class="source-lf"> {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf comment-line-double-dash-lflang">        </span><span class="source-lf comment-line-double-dash-lflang">#include <string.h></span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(t) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> character {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">        if (self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">idx < strlen(self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">message)) {</span>
<span class="source-lf">            lf_set(character, </span><span class="source-lf keyword-operator-lflang">*</span><span class="source-lf">(self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">message </span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf"> self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">idx));</span>
<span class="source-lf">            self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">idx</span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf">;</span>
<span class="source-lf">        }</span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">main</span><span class="source-lf"> </span><span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">timer</span><span class="source-lf"> stepper(</span><span class="source-lf constant-numeric-int-lflang">500</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">msec</span><span class="source-lf">, </span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">sec</span><span class="source-lf">)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">feeder</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">InputFeeder</span><span class="source-lf">(message </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Hello World!</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">)</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">reset_processor</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">ResetProcessor</span><span class="source-lf">()</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">history_processor</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">HistoryProcessor</span><span class="source-lf">()</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">feeder</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">character</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">reset_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">character</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">feeder</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">character</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">history_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">character</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">test</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">TraceTesting</span><span class="source-lf">(</span>
<span class="source-lf">        events_size </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span>
<span class="source-lf">        trace_size </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">60</span><span class="source-lf">,</span>
<span class="source-lf">        trace </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> (  </span><span class="source-lf comment-line-double-dash-lflang">// keep-format</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">72</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">72</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">69</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">69</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">76</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">76</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">95</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">95</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">79</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">79</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">32</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">32</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">119</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">119</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">95</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">95</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">82</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">114</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">76</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">108</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">68</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">100</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">95</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">95</span>
<span class="source-lf">        ),</span>
<span class="source-lf">        training </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-language-lflang">false</span>
<span class="source-lf">    )</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">reset_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">converted</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">history_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">converted</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">test</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">events</span>
<span class="source-lf"></span>
<span class="source-lf comment-line-double-dash-lflang">    </span><span class="source-lf comment-line-double-dash-lflang">// Trigger mode change</span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(stepper) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">reset_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">discard</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">history_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">discard</span><span class="source-lf"> {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">        lf_set(</span><span class="source-lf variable-other-constant-reactorinstance-lflang">reset_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">discard</span><span class="source-lf">, </span><span class="source-lf constant-language-lflang">true</span><span class="source-lf">);</span>
<span class="source-lf">        lf_set(</span><span class="source-lf variable-other-constant-reactorinstance-lflang">history_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">discard</span><span class="source-lf">, </span><span class="source-lf constant-language-lflang">true</span><span class="source-lf">);</span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(</span><span class="source-lf variable-other-constant-reactorinstance-lflang">reset_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">converted</span><span class="source-lf">) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">        printf(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Reset: %c</span><span class="source-lf string-quoted-double-lflang constant-character-escape">\n</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">reset_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">converted</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">value);</span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(</span><span class="source-lf variable-other-constant-reactorinstance-lflang">history_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">converted</span><span class="source-lf">) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">        printf(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">History: %c</span><span class="source-lf string-quoted-double-lflang constant-character-escape">\n</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">history_processor</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">converted</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">value);</span>
<span class="source-lf">    </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
