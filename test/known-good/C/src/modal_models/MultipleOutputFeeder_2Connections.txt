<span class="source-lf comment-block-lflang">/**</span>
<span class="source-lf comment-block-lflang"> * Modal Reactor Test.</span>
<span class="source-lf comment-block-lflang"> *</span>
<span class="source-lf comment-block-lflang"> * Tests if connections in the same reactor that have the same destination work</span>
<span class="source-lf comment-block-lflang"> * if they are located in separate modes.</span>
<span class="source-lf comment-block-lflang"> </span><span class="source-lf comment-block-lflang">*/</span>
<span class="source-lf meta-targetspec-lflang keyword-control-lflang">target</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">C</span><span class="source-lf meta-targetspec-lflang"> {</span>
<span class="source-lf meta-targetspec-lflang variable-parameter-lflang">    fast</span><span class="source-lf meta-targetspec-lflang">: </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">false</span><span class="source-lf meta-targetspec-lflang">,</span>
<span class="source-lf meta-targetspec-lflang variable-parameter-lflang">    timeout</span><span class="source-lf meta-targetspec-lflang">: </span><span class="source-lf meta-targetspec-lflang constant-numeric-int-lflang">2</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-numeric-lflang">sec</span>
<span class="source-lf meta-targetspec-lflang">}</span>
<span class="source-lf"></span>
<span class="source-lf keyword-control-import-lflang">import</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">TraceTesting</span><span class="source-lf"> </span><span class="source-lf keyword-control-import-lflang">from</span><span class="source-lf"> </span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">util/TraceTesting.lf</span><span class="source-lf string-quoted-double-lflang">"</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Modal</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">input</span><span class="source-lf meta-embedded-block-cpp"> next:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> bool</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">output</span><span class="source-lf meta-embedded-block-cpp"> count:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">initial</span><span class="source-lf"> </span><span class="source-lf keyword-control-lflang">mode</span><span class="source-lf"> One {</span>
<span class="source-lf">        </span><span class="source-lf variable-other-constant-reactorinstance-lflang">counter1</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Counter</span><span class="source-lf">(period </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">250</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">msec</span><span class="source-lf">)</span>
<span class="source-lf">        </span><span class="source-lf variable-other-constant-reactorinstance-lflang">counter1</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">value</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> count</span>
<span class="source-lf">        </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(next) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf keyword-control-lflang">reset</span><span class="source-lf">(Two) {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set_mode(Two); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">    }</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">mode</span><span class="source-lf"> Two {</span>
<span class="source-lf">        </span><span class="source-lf variable-other-constant-reactorinstance-lflang">counter2</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Counter</span><span class="source-lf">(period </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">100</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">msec</span><span class="source-lf">)</span>
<span class="source-lf">        </span><span class="source-lf variable-other-constant-reactorinstance-lflang">counter2</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">value</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> count</span>
<span class="source-lf">        </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(next) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> history(One) {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set_mode(One); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">    }</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Counter</span><span class="source-lf">(period:</span><span class="source-lf storage-type-lflang"> time</span><span class="source-lf">(</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">sec</span><span class="source-lf">)) {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">output</span><span class="source-lf meta-embedded-block-cpp"> value:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">timer</span><span class="source-lf"> t(</span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">, period)</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">reset</span><span class="source-lf"> </span><span class="source-lf storage-modifier-lflang">state</span><span class="source-lf meta-embedded-block-cpp"> curval:</span><span class="source-lf meta-embedded-block-cpp storage-type-lflang"> int</span><span class="source-lf meta-embedded-block-cpp">(</span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(t) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> value {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set(value, self</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">curval</span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf keyword-operator-lflang">+</span><span class="source-lf">); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">main</span><span class="source-lf"> </span><span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> {</span>
<span class="source-lf">    </span><span class="source-lf storage-modifier-lflang">timer</span><span class="source-lf"> stepper(</span><span class="source-lf constant-numeric-int-lflang">500</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">msec</span><span class="source-lf">, </span><span class="source-lf constant-numeric-int-lflang">500</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">msec</span><span class="source-lf">)</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">modal</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">Modal</span><span class="source-lf">()</span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">test</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf keyword-operator-new-lflang">new</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">TraceTesting</span><span class="source-lf">(</span>
<span class="source-lf">        events_size </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span>
<span class="source-lf">        trace_size </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-numeric-int-lflang">51</span><span class="source-lf">,</span>
<span class="source-lf">        trace </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> (  </span><span class="source-lf comment-line-double-dash-lflang">// keep-format</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">100000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">100000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">100000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">100000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">4</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">100000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">5</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">250000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">4</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">100000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">100000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">2</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">100000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">3</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">100000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">4</span><span class="source-lf">,</span>
<span class="source-lf">            </span><span class="source-lf constant-numeric-int-lflang">100000000</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">1</span><span class="source-lf">,</span><span class="source-lf constant-numeric-int-lflang">5</span>
<span class="source-lf">        ),</span>
<span class="source-lf">        training </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> </span><span class="source-lf constant-language-lflang">false</span>
<span class="source-lf">    )</span>
<span class="source-lf"></span>
<span class="source-lf">    </span><span class="source-lf variable-other-constant-reactorinstance-lflang">modal</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">count</span><span class="source-lf"> </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">test</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">events</span>
<span class="source-lf"></span>
<span class="source-lf comment-line-double-dash-lflang">    </span><span class="source-lf comment-line-double-dash-lflang">// Trigger mode change</span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(stepper) </span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf"> </span><span class="source-lf variable-other-constant-reactorinstance-lflang">modal</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">next</span><span class="source-lf"> {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> lf_set(</span><span class="source-lf variable-other-constant-reactorinstance-lflang">modal</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">next</span><span class="source-lf">, </span><span class="source-lf constant-language-lflang">true</span><span class="source-lf">); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf comment-line-double-dash-lflang">    </span><span class="source-lf comment-line-double-dash-lflang">// Print</span>
<span class="source-lf">    </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(</span><span class="source-lf variable-other-constant-reactorinstance-lflang">modal</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">count</span><span class="source-lf">) {</span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> printf(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">%d</span><span class="source-lf string-quoted-double-lflang constant-character-escape">\n</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">, </span><span class="source-lf variable-other-constant-reactorinstance-lflang">modal</span><span class="source-lf keyword-operator-lflang">.</span><span class="source-lf variable-other-lflang">count</span><span class="source-lf keyword-operator-lflang">-></span><span class="source-lf">value); </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
