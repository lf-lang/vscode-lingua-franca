<span class="source-lf meta-targetspec-lflang keyword-control-lflang">target</span><span class="source-lf meta-targetspec-lflang"> </span><span class="source-lf meta-targetspec-lflang constant-language-lflang">C</span>
<span class="source-lf"></span>
<span class="source-lf storage-modifier-lflang">reactor</span><span class="source-lf"> </span><span class="source-lf entity-name-type-lflang">NrfLeds</span><span class="source-lf"> {</span>
<span class="source-lf">  </span><span class="source-lf keyword-control-lflang">preamble</span><span class="source-lf"> {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf comment-line-double-dash-lflang">    </span><span class="source-lf comment-line-double-dash-lflang">#include <zephyr/kernel.h></span>
<span class="source-lf comment-line-double-dash-lflang">    </span><span class="source-lf comment-line-double-dash-lflang">#include <zephyr/drivers/gpio.h></span>
<span class="source-lf comment-line-double-dash-lflang">    </span><span class="source-lf comment-line-double-dash-lflang">#define LED0_NODE DT_ALIAS(led0)</span>
<span class="source-lf comment-line-double-dash-lflang">    </span><span class="source-lf comment-line-double-dash-lflang">#define LED1_NODE DT_ALIAS(led1)</span>
<span class="source-lf comment-line-double-dash-lflang">    </span><span class="source-lf comment-line-double-dash-lflang">#define LED2_NODE DT_ALIAS(led2)</span>
<span class="source-lf comment-line-double-dash-lflang">    </span><span class="source-lf comment-line-double-dash-lflang">#define LED3_NODE DT_ALIAS(led3)</span>
<span class="source-lf">    static </span><span class="source-lf storage-modifier-lflang">const</span><span class="source-lf"> struct gpio_dt_spec led0 </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> GPIO_DT_SPEC_GET(LED0_NODE, gpios);</span>
<span class="source-lf">    static </span><span class="source-lf storage-modifier-lflang">const</span><span class="source-lf"> struct gpio_dt_spec led1 </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> GPIO_DT_SPEC_GET(LED1_NODE, gpios);</span>
<span class="source-lf">    static </span><span class="source-lf storage-modifier-lflang">const</span><span class="source-lf"> struct gpio_dt_spec led2 </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> GPIO_DT_SPEC_GET(LED2_NODE, gpios);</span>
<span class="source-lf">    static </span><span class="source-lf storage-modifier-lflang">const</span><span class="source-lf"> struct gpio_dt_spec led3 </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf"> GPIO_DT_SPEC_GET(LED3_NODE, gpios);</span>
<span class="source-lf">  </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">  </span><span class="source-lf storage-modifier-lflang">timer</span><span class="source-lf"> t(</span><span class="source-lf constant-numeric-int-lflang">0</span><span class="source-lf">, </span><span class="source-lf constant-numeric-int-lflang">100</span><span class="source-lf"> </span><span class="source-lf constant-numeric-lflang">msec</span><span class="source-lf">)</span>
<span class="source-lf"></span>
<span class="source-lf">  </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(</span><span class="source-lf support-variable-lflang">startup</span><span class="source-lf">) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">    gpio_pin_configure_dt(&led0, GPIO_OUTPUT_ACTIVE);</span>
<span class="source-lf">    gpio_pin_configure_dt(&led1, GPIO_OUTPUT_ACTIVE);</span>
<span class="source-lf">    gpio_pin_configure_dt(&led2, GPIO_OUTPUT_ACTIVE);</span>
<span class="source-lf">    gpio_pin_configure_dt(&led3, GPIO_OUTPUT_ACTIVE);</span>
<span class="source-lf">  </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf"></span>
<span class="source-lf">  </span><span class="source-lf keyword-control-lflang">reaction</span><span class="source-lf">(t) {</span><span class="source-lf keyword-operator-lflang">=</span>
<span class="source-lf">    printf(</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf string-quoted-double-lflang">Hello</span><span class="source-lf string-quoted-double-lflang constant-character-escape">\n</span><span class="source-lf string-quoted-double-lflang">"</span><span class="source-lf">);</span>
<span class="source-lf">    gpio_pin_toggle_dt(&led0);</span>
<span class="source-lf">    gpio_pin_toggle_dt(&led1);</span>
<span class="source-lf">    gpio_pin_toggle_dt(&led2);</span>
<span class="source-lf">    gpio_pin_toggle_dt(&led3);</span>
<span class="source-lf">  </span><span class="source-lf keyword-operator-lflang">=</span><span class="source-lf">}</span>
<span class="source-lf">}</span>
<span class="source-lf"></span>
